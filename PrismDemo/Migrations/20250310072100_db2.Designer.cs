// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrismDemo.Data;

#nullable disable

namespace PrismDemo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250310072100_db2")]
    partial class db2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PrismDemo.Data.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "北京市海淀区",
                            CreatedDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zhangsan@example.com",
                            IsActive = true,
                            Name = "张三",
                            Phone = "13800138001"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "上海市浦东新区",
                            CreatedDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lisi@example.com",
                            IsActive = true,
                            Name = "李四",
                            Phone = "13900139002"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "广州市天河区",
                            CreatedDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wangwu@example.com",
                            IsActive = false,
                            Name = "王五",
                            Phone = "13700137003"
                        });
                });

            modelBuilder.Entity("PrismDemo.Data.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD20230001",
                            Status = "已完成",
                            TotalAmount = 6999.00m
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD20230002",
                            Status = "处理中",
                            TotalAmount = 5998.00m
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 1,
                            OrderDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNumber = "ORD20230003",
                            Status = "已发货",
                            TotalAmount = 2598.00m
                        });
                });

            modelBuilder.Entity("PrismDemo.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("Name");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "电子产品",
                            Description = "高性能商务笔记本电脑",
                            IsAvailable = true,
                            Name = "笔记本电脑",
                            Price = 6999.00m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "电子产品",
                            Description = "新一代智能手机",
                            IsAvailable = true,
                            Name = "智能手机",
                            Price = 4999.00m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "配件",
                            Description = "降噪无线蓝牙耳机",
                            IsAvailable = true,
                            Name = "无线耳机",
                            Price = 999.00m,
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "穿戴设备",
                            Description = "健康监测智能手表",
                            IsAvailable = true,
                            Name = "智能手表",
                            Price = 1599.00m,
                            StockQuantity = 80
                        });
                });

            modelBuilder.Entity("PrismDemo.Data.Entities.Order", b =>
                {
                    b.HasOne("PrismDemo.Data.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PrismDemo.Data.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
